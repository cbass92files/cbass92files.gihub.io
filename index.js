class ImageExtension{constructor(){this.runtime=null,this.imageData=null,this.zip=new JSZip}getInfo(){return{id:'image-extension',name:'Image Extension',blocks:[{opcode:'uploadImage',blockType:Scratch.BlockType.COMMAND,text:'Upload image [URL]',arguments:{URL:{type:Scratch.ArgumentType.STRING,defaultValue:''}}},{opcode:'downloadImage',blockType:Scratch.BlockType.REPORTER,text:'Download image'},{opcode:'takeSnapshot',blockType:Scratch.BlockType.REPORTER,text:'Take snapshot'},{opcode:'modifyCostumeToStage',blockType:Scratch.BlockType.COMMAND,text:'Modify costume to look like the stage'},{opcode:'packageSnapshots',blockType:Scratch.BlockType.COMMAND,text:'Package snapshots into zip'},{opcode:'downloadZip',blockType:Scratch.BlockType.REPORTER,text:'Download zip'}]}}setRuntime(a){this.runtime=a}uploadImage(a){const b=a.URL,c=this.runtime,d=new XMLHttpRequest;d.open('GET',b,!0),d.responseType='blob',d.onload=function(){if(200===d.status){const a=d.response,e=new FileReader;e.onloadend=function(){const a=e.result; c.postIOData('imageExtension','setImageData',a)};e.readAsDataURL(a)}};d.send()}downloadImage(){const a=document.createElement('a');a.href=this.imageData,a.download='image.png',a.click()}takeSnapshot(){const a=document.createElement('canvas'),b=document.getElementsByClassName('stage')[0],c=b.getBoundingClientRect();a.width=c.width,a.height=c.height;const d=a.getContext('2d');return d.drawImage(b,0,0,c.width,c.height),this.imageData=a.toDataURL(),this.imageData}modifyCostumeToStage(){const a=document.getElementsByClassName('stage')[0],b=a.getElementsByClassName('sprite')[0],c=b.getElementsByClassName('costume')[0],d=a.getBoundingClientRect();c.style.backgroundImage=`url(${this.imageData})`,c.style.backgroundSize=`${d.width}px ${d.height}px`}packageSnapshots(){const a=this.runtime.steps+1,b=[];for(let c=0;c<a;c++)b.push(this.captureSnapshot(c));return Promise.all(b).then(()=>{const b=this.zip.generateAsync({type:'blob'});return this.zip=new JSZip,b}).then(b=>{const c=document.createElement('a');c.href=URL.createObjectURL(b),c.download='snapshots.zip',c.click()})}captureSnapshot(a){return new Promise(b=>{setTimeout(()=>{const b=document.createElement('canvas'),c=document.getElementsByClassName('stage')[0],d=c.getBoundingClientRect();b.width=d.width,b.height=d.height;const e=b.getContext('2d');e.drawImage(c,0,0,d.width,d.height);const f=b.toDataURL(),g=`snapshot${a+1}.png`;this.zip.file(g,this.dataURItoBlob(f),{binary:!0}),b()},0)})}dataURItoBlob(a){const b=atob(a.split(',')[1]),c=a.split(',')[0].split(':')[1].split(';')[0],d=new ArrayBuffer(b.length),e=new Uint8Array(d);for(let a=0;a<b.length;a++)e[a]=b.charCodeAt(a);return new Blob([d],{type:c})}downloadZip(){}}
Scratch.extensions.register(new ImageExtension());
